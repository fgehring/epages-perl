.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PMLOAD 1"
.TH PMLOAD 1 "2008-02-29" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pmload \- show what files a given module loads at compile time
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Given an argument of a module name, show all the files 
that are loaded directly or indirectly when the module
is used at compile-time.
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 10
\&    $ pmload IO::Handle
\&    /usr/local/devperl/lib/5.00554/Exporter.pm
\&    /usr/local/devperl/lib/5.00554/Carp.pm
\&    /usr/local/devperl/lib/5.00554/strict.pm
\&    /usr/local/devperl/lib/5.00554/vars.pm
\&    /usr/local/devperl/lib/5.00554/i686\-linux/DynaLoader.pm
\&    /usr/local/devperl/lib/5.00554/i686\-linux/IO/Handle.pm
\&    /usr/local/devperl/lib/5.00554/Symbol.pm
\&    /usr/local/devperl/lib/5.00554/i686\-linux/IO/File.pm
\&    /usr/local/devperl/lib/5.00554/SelectSaver.pm
\&    /usr/local/devperl/lib/5.00554/i686\-linux/Fcntl.pm
\&    /usr/local/devperl/lib/5.00554/AutoLoader.pm
\&    /usr/local/devperl/lib/5.00554/i686\-linux/IO.pm
\&    /usr/local/devperl/lib/5.00554/i686\-linux/IO/Seekable.pm
\&
\&    $ cat \`pmload IO::Socket\` | wc \-l
\&       4015
\&
\&    $ oldperl \-S pmload Tk
\&    /usr/lib/perl5/site_perl/Tk/Pretty.pm
\&    /usr/lib/perl5/Symbol.pm
\&    /usr/lib/perl5/site_perl/Tk/Frame.pm
\&    /usr/lib/perl5/site_perl/Tk/Toplevel.pm
\&    /usr/lib/perl5/strict.pm
\&    /usr/lib/perl5/Exporter.pm
\&    /usr/lib/perl5/vars.pm
\&    /usr/lib/perl5/site_perl/auto/Tk/Wm/autosplit.ix
\&    /usr/lib/perl5/site_perl/auto/Tk/Widget/autosplit.ix
\&    /usr/lib/perl5/site_perl/Tk.pm
\&    /usr/lib/perl5/i386\-linux/5.00404/DynaLoader.pm
\&    /usr/lib/perl5/site_perl/auto/Tk/Frame/autosplit.ix
\&    /usr/lib/perl5/site_perl/auto/Tk/Toplevel/autosplit.ix
\&    /usr/lib/perl5/Carp.pm
\&    /usr/lib/perl5/site_perl/auto/Tk/autosplit.ix
\&    /usr/lib/perl5/site_perl/Tk/CmdLine.pm
\&    /usr/lib/perl5/site_perl/Tk/MainWindow.pm
\&    /usr/lib/perl5/site_perl/Tk/Submethods.pm
\&    /usr/lib/perl5/site_perl/Tk/Configure.pm
\&    /usr/lib/perl5/AutoLoader.pm
\&    /usr/lib/perl5/site_perl/Tk/Derived.pm
\&    /usr/lib/perl5/site_perl/Tk/Image.pm
\&    /usr/lib/perl5/site_perl/Tk/Wm.pm
\&    /usr/lib/perl5/site_perl/Tk/Widget.pm
.Ve
.SH "NOTE"
.IX Header "NOTE"
If the programmers used a delayed \f(CW\*(C`require\*(C'\fR, those files won't show up.
Furthermore, this doesn't show all possible files that get opened,
just those that those up in \f(CW%INC\fR.  Most systems have a way to trace
system calls.  You can use this to find the real answer.  First, get a
baseline with no modules loaded.
.PP
.Vb 9
\&    $ strace perl \-e 1 2>&1 | perl \-nle \*(Aq/^open\e("(.*?)".* = [^\-]/ && print $1\*(Aq
\&    /etc/ld.so.cache
\&    /lib/libnsl.so.1
\&    /lib/libdb.so.2
\&    /lib/libdl.so.2
\&    /lib/libm.so.6
\&    /lib/libc.so.6
\&    /lib/libcrypt.so.1
\&    /dev/null
\&
\&    $ strace perl \-e 1 2>&1 | grep \-c \*(Aq^open.*= [^\-]\*(Aq
\&    8
.Ve
.PP
Now add module loads and see what you get:
.PP
.Vb 2
\&    $ strace perl \-MIO::Socket \-e 1 2>&1 | grep \-c \*(Aq^open.*= [^\-]\*(Aq
\&    24
\&
\&    $ strace perl \-MTk \-e 1 2>&1 | grep \-c \*(Aq^open.*= [^\-]\*(Aq
\&    35
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Devel::Loaded, \fIplxload\fR\|(1).
.SH "AUTHORS and COPYRIGHTS"
.IX Header "AUTHORS and COPYRIGHTS"
Copyright (C) 1999 Tom Christiansen.
.PP
Copyright (C) 2006\-2008 Mark Leighton Fisher.
.PP
This is free software; you can redistribute it and/or modify it
under the terms of either:
(a) the \s-1GNU\s0 General Public License as published by the Free
Software Foundation; either version 1, or (at your option) any
later version, or
(b) the Perl \*(L"Artistic License\*(R".
(This is the Perl 5 licensing scheme.)
.PP
Please note this is a change from the
original pmtools\-1.00 (still available on \s-1CPAN\s0),
as pmtools\-1.00 were licensed only under the
Perl \*(L"Artistic License\*(R".

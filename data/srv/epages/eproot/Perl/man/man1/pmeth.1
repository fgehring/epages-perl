.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "PMETH 1"
.TH PMETH 1 "2008-02-29" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
pmeth \- show a Perl class's methods
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Given a class name, print out all methods available to that class.
It does this by loading in the class module, and walking its
symbol table and those of its ancestor classes.  A regular method
call shows up simply:
.PP
.Vb 5
\&    $ pmeth IO::Socket | grep \*(Aq^con\*(Aq
\&    confess
\&    configure
\&    connect
\&    connected
.Ve
.PP
But one that came from else where is noted with one or
more \*(L"via\*(R" notations:
.PP
.Vb 2
\&    DESTROY via IO::Handle
\&    export via Exporter via IO::Handle
.Ve
.PP
A base-class method that is unavailable due to being hidden by a close
derived-class method by the same name (but accessible via \s-1SUPER::\s0)
is indicated by a leading \*(L"[overridden]\*(R" before it:
.PP
.Vb 1
\&    [overridden] new via IO::Handle
.Ve
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.Vb 10
\&    $ pmeth IO::Socket
\&    AF_INET
\&    AF_UNIX
\&    INADDR_ANY
\&    INADDR_BROADCAST
\&    INADDR_LOOPBACK
\&    INADDR_NONE
\&    SOCK_DGRAM
\&    SOCK_RAW
\&    SOCK_STREAM
\&    accept
\&    bind
\&    carp
\&    confess
\&    configure
\&    connect
\&    connected
\&    croak
\&    getsockopt
\&    import
\&    inet_aton
\&    inet_ntoa
\&    listen
\&    new
\&    pack_sockaddr_in
\&    pack_sockaddr_un
\&    peername
\&    protocol
\&    recv
\&    register_domain
\&    send
\&    setsockopt
\&    shutdown
\&    sockaddr_in
\&    sockaddr_un
\&    sockdomain
\&    socket
\&    socketpair
\&    sockname
\&    sockopt
\&    socktype
\&    timeout
\&    unpack_sockaddr_in
\&    unpack_sockaddr_un
\&    DESTROY via IO::Handle
\&    SEEK_CUR via IO::Handle
\&    SEEK_END via IO::Handle
\&    SEEK_SET via IO::Handle
\&    _IOFBF via IO::Handle
\&    _IOLBF via IO::Handle
\&    _IONBF via IO::Handle
\&    _open_mode_string via IO::Handle
\&    autoflush via IO::Handle
\&    blocking via IO::Handle
\&    [overridden] carp via IO::Handle
\&    clearerr via IO::Handle
\&    close via IO::Handle
\&    [overridden] confess via IO::Handle
\&    constant via IO::Handle
\&    [overridden] croak via IO::Handle
\&    eof via IO::Handle
\&    error via IO::Handle
\&    fcntl via IO::Handle
\&    fdopen via IO::Handle
\&    fileno via IO::Handle
\&    flush via IO::Handle
\&    format_formfeed via IO::Handle
\&    format_line_break_characters via IO::Handle
\&    format_lines_left via IO::Handle
\&    format_lines_per_page via IO::Handle
\&    format_name via IO::Handle
\&    format_page_number via IO::Handle
\&    format_top_name via IO::Handle
\&    format_write via IO::Handle
\&    formline via IO::Handle
\&    gensym via IO::Handle
\&    getc via IO::Handle
\&    getline via IO::Handle
\&    getlines via IO::Handle
\&    gets via IO::Handle
\&    input_line_number via IO::Handle
\&    input_record_separator via IO::Handle
\&    ioctl via IO::Handle
\&    [overridden] new via IO::Handle
\&    new_from_fd via IO::Handle
\&    opened via IO::Handle
\&    output_field_separator via IO::Handle
\&    output_record_separator via IO::Handle
\&    print via IO::Handle
\&    printf via IO::Handle
\&    printflush via IO::Handle
\&    qualify via IO::Handle
\&    qualify_to_ref via IO::Handle
\&    read via IO::Handle
\&    setbuf via IO::Handle
\&    setvbuf via IO::Handle
\&    stat via IO::Handle
\&    sync via IO::Handle
\&    sysread via IO::Handle
\&    syswrite via IO::Handle
\&    truncate via IO::Handle
\&    ungensym via IO::Handle
\&    ungetc via IO::Handle
\&    untaint via IO::Handle
\&    write via IO::Handle
\&    _push_tags via Exporter via IO::Handle
\&    export via Exporter via IO::Handle
\&    export_fail via Exporter via IO::Handle
\&    export_ok_tags via Exporter via IO::Handle
\&    export_tags via Exporter via IO::Handle
\&    export_to_level via Exporter via IO::Handle
\&    [overridden] import via Exporter via IO::Handle
\&    require_version via Exporter via IO::Handle
\&    VERSION via UNIVERSAL
\&    can via UNIVERSAL
\&    [overridden] import via UNIVERSAL
\&    isa via UNIVERSAL
.Ve
.SH "NOTE"
.IX Header "NOTE"
Perl makes no distinction between functions, procedures, and methods,
nor whether they are public or nominally private, nor whether a method
is nominally a class method, an object method, or both.  They all show up
as subs in the package namespace.  So if your class says \f(CW\*(C`use Carp\*(C'\fR, you
just polluted your namespace with things like \fIcroak()\fR and \fIconfess()\fR, which
will appear to be available as method calls on objects of your class.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIperltoot\fR\|(1), \fIperlobj\fR\|(1)
.SH "AUTHORS and COPYRIGHTS"
.IX Header "AUTHORS and COPYRIGHTS"
Copyright (C) 1999 Tom Christiansen.
.PP
Copyright (C) 2006\-2008 Mark Leighton Fisher.
.PP
This is free software; you can redistribute it and/or modify it
under the terms of either:
(a) the \s-1GNU\s0 General Public License as published by the Free
Software Foundation; either version 1, or (at your option) any
later version, or
(b) the Perl \*(L"Artistic License\*(R".
(This is the Perl 5 licensing scheme.)
.PP
Please note this is a change from the
original pmtools\-1.00 (still available on \s-1CPAN\s0),
as pmtools\-1.00 were licensed only under the
Perl \*(L"Artistic License\*(R".

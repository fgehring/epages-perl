.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Config::Extend::MySQL 3"
.TH Config::Extend::MySQL 3 "2011-04-13" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Config::Extend::MySQL \- Extend your favourite .INI parser module to read MySQL configuration file
.SH "VERSION"
.IX Header "VERSION"
Version 0.04
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Config::Extend::MySQL;
\&
\&    # read MySQL config using Config::IniFiles
\&    my $config = Config::Extend::MySQL\->new({ from => $file, using => "Config::IniFiles" });
\&
\&    # read MySQL config using Config::Tiny
\&    my $config = Config::Extend::MySQL\->new({ from => $file, using => "Config::Tiny" });
\&
\&    # use the resulting object as you usually do
\&    ...
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module extends other \f(CW\*(C`Config::\*(C'\fR modules so they can read MySQL
configuration files. It works by slurping and preprocessing the files
before letting your favourite \f(CW\*(C`Config::\*(C'\fR module parse the result.
.PP
Currently supported modules are \f(CW\*(C`Config::IniFiles\*(C'\fR, \f(CW\*(C`Config::INI::Reader\*(C'\fR 
and \f(CW\*(C`Config::Tiny\*(C'\fR.
.SS "Rationale"
.IX Subsection "Rationale"
This module was written out of a need of reading MySQL configuration
files from random machines. At first, the author thought they were just
classical \f(CW\*(C`.INI\*(C'\fR files, but soon discovered that they include additional
features like \f(CW\*(C`!include\*(C'\fR and \f(CW\*(C`!includedir\*(C'\fR, and bare boolean options,
which without surprise make most common modules choke or die.
.PP
Hence this module which simply slurps all the files, recursing though the
\&\f(CW\*(C`!include\*(C'\fR and \f(CW\*(C`!includedir\*(C'\fR directives, inlining their content in 
memory, and transforms the bare boolean options into explicitly assigned 
options.
.PP
As to why this module extends other modules instead of being on its own,
it's because the author was too lazy to think of yet another \s-1API\s0 and
preferred to use the modules he already know. And given he use several
of them, depending on the context, it was just as easy to avoid being
too thighly coupled to a particular module.
.SH "METHODS"
.IX Header "METHODS"
.SS "\fInew()\fP"
.IX Subsection "new()"
Create and return an object
.PP
\&\fBUsage\fR
.PP
.Vb 1
\&    my $config = Config::Extend::MySQL\->new({ from => $file, using => $module });
.Ve
.PP
\&\fBOptions\fR
.IP "\(bu" 4
\&\f(CW\*(C`from\*(C'\fR \- the path to the main MySQL configuration file
.IP "\(bu" 4
\&\f(CW\*(C`using\*(C'\fR \- the module name to use as backend for parsing the configuration file
.PP
\&\fBExamples\fR
.PP
.Vb 3
\&    # read MySQL config using Config::IniFiles
\&    my $config = Config::Extend::MySQL\->new({ from => $file, using => "Config::IniFiles" });
\&    # $config ISA Config::Extend::MySQL, ISA Config::IniFiles
\&
\&    # read MySQL config using Config::Tiny
\&    my $config = Config::Extend::MySQL\->new({ from => $file, using => "Config::Tiny" });
\&    # $config ISA Config::Extend::MySQL, ISA Config::Tiny
.Ve
.SH "DIAGNOSTICS"
.IX Header "DIAGNOSTICS"
.ie n .IP """Arguments must be given as a hash reference""" 4
.el .IP "\f(CWArguments must be given as a hash reference\fR" 4
.IX Item "Arguments must be given as a hash reference"
\&\fB(E)\fR As the message says, the arguments must be given to the 
function or method as a hash reference.
.ie n .IP """Backend module failed to parse \*(Aq%s\*(Aq""" 4
.el .IP "\f(CWBackend module failed to parse \*(Aq%s\*(Aq\fR" 4
.IX Item "Backend module failed to parse %s"
\&\fB(F)\fR The backend module was unable to parse the given file. 
See \*(L"\s-1CAVEATS\s0\*(R" for some hints.
.ie n .IP """Can\*(Aqt load module %s: %s""" 4
.el .IP "\f(CWCan\*(Aqt load module %s: %s\fR" 4
.IX Item "Cant load module %s: %s"
\&\fB(F)\fR The backend module could not be loaded.
.ie n .IP """Can\*(Aqt read in\-memory buffer: %s""" 4
.el .IP "\f(CWCan\*(Aqt read in\-memory buffer: %s\fR" 4
.IX Item "Cant read in-memory buffer: %s"
\&\fB(F)\fR This should not happen.
.ie n .IP """Empty argument \*(Aq%s\*(Aq""" 4
.el .IP "\f(CWEmpty argument \*(Aq%s\*(Aq\fR" 4
.IX Item "Empty argument %s"
\&\fB(E)\fR The given argument was empty, but a value is required.
.ie n .IP """File \*(Aq%s\*(Aq is empty""" 4
.el .IP "\f(CWFile \*(Aq%s\*(Aq is empty\fR" 4
.IX Item "File %s is empty"
\&\fB(W)\fR The file is empty.
.ie n .IP """Missing required argument \*(Aq%s\*(Aq""" 4
.el .IP "\f(CWMissing required argument \*(Aq%s\*(Aq\fR" 4
.IX Item "Missing required argument %s"
\&\fB(E)\fR You forgot to supply a mandatory argument.
.ie n .IP """No such file \*(Aq%s\*(Aq""""" 4
.el .IP "\f(CWNo such file \*(Aq%s\*(Aq""\fR" 4
.IX Item "No such file %s"""
\&\fB(F)\fR The given path does not point to an existing file.
.SH "CAVEATS"
.IX Header "CAVEATS"
The different supported modules don't parse \f(CW\*(C`.INI\*(C'\fR files exactly the
same ways, and have different behaviours:
.IP "\(bu" 4
\&\f(CW\*(C`Config::IniFiles\*(C'\fR doesn't want to create
.IP "\(bu" 4
\&\f(CW\*(C`Config::INI::Reader\*(C'\fR by default doesn't allow the pound sign (\f(CW\*(C`#\*(C'\fR)
for beginning comments.
.IP "\(bu" 4
when assigning the same option twice, \f(CW\*(C`Config::Tiny\*(C'\fR replaces the old 
value with the new one, \f(CW\*(C`Config::IniFiles\*(C'\fR appends it with a newline.
.PP
And probably many more.
.PP
Also note that in order to keep the code simple, this module wants 
Perl 5.6 or newer. However, a patch to make it work on Perl 5.5.3 is 
included in the distribution (\fIpatches/patch\-for\-perl5.5.diff\fR).
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Config::IniFiles
.PP
Config::INI::Reader
.PP
Config::Tiny
.SH "AUTHOR"
.IX Header "AUTHOR"
Se\*'bastien Aperghis-Tramoni, \f(CW\*(C`<sebastien at aperghis.net>\*(C'\fR
.SH "BUGS"
.IX Header "BUGS"
Please report any bugs or feature requests 
to \f(CW\*(C`bug\-config\-extend\-mysql at rt.cpan.org\*(C'\fR, or through the web interface 
at http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Config\-Extend\-MySQL <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Config-Extend-MySQL>.
I will be notified, and then you'll automatically be notified of 
progress on your bug as I make changes.
.SH "SUPPORT"
.IX Header "SUPPORT"
You can find documentation for this module with the perldoc command.
.PP
.Vb 1
\&    perldoc Config::Extend::MySQL
.Ve
.PP
You can also look for information at:
.IP "\(bu" 4
\&\s-1RT:\s0 \s-1CPAN\s0's request tracker
.Sp
http://rt.cpan.org/NoAuth/Bugs.html?Dist=Config\-Extend\-MySQL <http://rt.cpan.org/NoAuth/Bugs.html?Dist=Config-Extend-MySQL>
.IP "\(bu" 4
AnnoCPAN: Annotated \s-1CPAN\s0 documentation
.Sp
http://annocpan.org/dist/Config\-Extend\-MySQL <http://annocpan.org/dist/Config-Extend-MySQL>
.IP "\(bu" 4
\&\s-1CPAN\s0 Ratings
.Sp
http://cpanratings.perl.org/d/Config\-Extend\-MySQL <http://cpanratings.perl.org/d/Config-Extend-MySQL>
.IP "\(bu" 4
Search \s-1CPAN\s0
.Sp
http://search.cpan.org/dist/Config\-Extend\-MySQL <http://search.cpan.org/dist/Config-Extend-MySQL>
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2008 Se\*'bastien Aperghis-Tramoni, all rights reserved.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Barcode::DataMatrix 3"
.TH Barcode::DataMatrix 3 "2012-06-21" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Barcode::DataMatrix \- Generate data for Data Matrix barcodes
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 6
\&    use Barcode::DataMatrix;
\&    my $data = Barcode::DataMatrix\->new\->barcode(\*(AqMONKEY\*(Aq);
\&    for my $row (@$data) {
\&        print for map { $_ ? "#" : \*(Aq \*(Aq } @$row;
\&        print "\en";
\&    }
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This class is used to generate data for Data Matrix barcodes. It is primarily
useful as a data source for barcode modules that do rendering,
such as HTML::Barcode::DataMatrix.  You can easily make a version that
renders an image, \s-1PDF\s0, or anything else.
.SH "METHODS"
.IX Header "METHODS"
.SS "new (%attributes)"
.IX Subsection "new (%attributes)"
Instantiate a new Barcode::DataMatrix object. The \f(CW%attributes\fR hash
can take any of the other attributes listed below.
.SS "barcode ($text)"
.IX Subsection "barcode ($text)"
Generate barcode data representing the \f(CW$text\fR string.  This returns
an array ref of rows in the data matrix, each containing array refs of 
cells within that row. The cells are true and false values
that represent filled or empty squares.
.PP
This can throw an exception if it's unable to generate the barcode data.
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "encoding_mode"
.IX Subsection "encoding_mode"
The encoding mode for the data matrix. Can be one of:
\&\f(CW\*(C`AUTO\*(C'\fR (default), \f(CW\*(C`ASCII\*(C'\fR, \f(CW\*(C`C40\*(C'\fR, \f(CW\*(C`TEXT\*(C'\fR, \f(CW\*(C`BASE256\*(C'\fR, or \f(CW\*(C`NONE\*(C'\fR.
.SS "process_tilde"
.IX Subsection "process_tilde"
Set to true to indicate the tilde character \*(L"~\*(R" is being used to recognize
special characters. See this page for more information:
<http://www.idautomation.com/datamatrixfaq.html>
.SH "AUTHOR"
.IX Header "AUTHOR"
Mons Anderson \f(CW\*(C`<inthrax@gmail.com>\*(C'\fR (GD::Barcode::DataMatrix at http://code.google.com/p/perl\-ex/ <http://code.google.com/p/perl-ex/>, from which this distribution originates)
.PP
Mark A. Stratman, \f(CW\*(C`<stratman@gmail.com>\*(C'\fR
.SH "SOURCE REPOSITORY"
.IX Header "SOURCE REPOSITORY"
http://github.com/mstratman/Barcode\-DataMatrix <http://github.com/mstratman/Barcode-DataMatrix>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.IP "HTML::Barcode::DataMatrix" 4
.IX Item "HTML::Barcode::DataMatrix"
.PD 0
.IP "http://grandzebu.net/index.php?page=/informatique/codbar\-en/datamatrix.htm <http://grandzebu.net/index.php?page=/informatique/codbar-en/datamatrix.htm>" 4
.IX Item "http://grandzebu.net/index.php?page=/informatique/codbar-en/datamatrix.htm <http://grandzebu.net/index.php?page=/informatique/codbar-en/datamatrix.htm>"
.IP "<http://www.idautomation.com/datamatrixfaq.html>" 4
.IX Item "<http://www.idautomation.com/datamatrixfaq.html>"
.PD
.SH "LICENSE AND COPYRIGHT"
.IX Header "LICENSE AND COPYRIGHT"
Copyright 2011 the AUTHORs listed above.
.PP
This program is free software; you can redistribute it and/or modify it
under the terms of either: the \s-1GNU\s0 General Public License as published
by the Free Software Foundation; or the Artistic License.
.PP
See http://dev.perl.org/licenses/ for more information.

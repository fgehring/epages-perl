.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.35)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Browser::Open 3"
.TH Browser::Open 3 "2012-03-10" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Browser::Open \- open a browser in a given URL
.SH "VERSION"
.IX Header "VERSION"
version 0.03
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Browser::Open qw( open_browser );
\&    
\&    ### Try commands specific to the current Operating System
\&    my $ok = open_browser($url);
\&    # ! defined($ok): no recognized command found
\&    # $ok == 0: command found and executed
\&    # $ok != 0: command found, error while executing
\&    
\&    ### Try all known commands
\&    my $ok = open_browser($url, 1);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The functions optionaly exported by this module allows you to open URLs
in the user browser.
.PP
A set of known commands per OS-name is tested for presence, and the
first one found is executed. With an optional parameter, all known
commands are checked.
.PP
The \*(L"open_browser\*(R" uses the \f(CW\*(C`system()\*(C'\fR function to execute the
command. If you want more control, you can get the command with the
\&\*(L"open_browser_cmd\*(R" or \*(L"open_browser_cmd_all\*(R" functions and then
use whatever method you want to execute it.
.SH "API"
.IX Header "API"
All functions are \fBnot\fR exported by default. You must ask for them
explicitly.
.SS "open_browser"
.IX Subsection "open_browser"
.Vb 1
\&    my $ok = open_browser($url, $all);
.Ve
.PP
Find an appropriate command and executes it with your \f(CW$url\fR. If
\&\f(CW$all\fR is false, the default, only commands that match the current \s-1OS\s0
will be tested. If true, all known commands will be tested.
.PP
If no command was found, returns \f(CW\*(C`undef\*(C'\fR.
.PP
If a command is found, returns the exit code of the execution attempt, 0
for success. See the \f(CW\*(C`system()\*(C'\fR for more information about this
exit code.
.PP
If no \f(CW$url\fR is given, an exception will be thrown:
\&\f(CW\*(C`Missing required parameter $url\*(C'\fR.
.SS "open_browser_cmd"
.IX Subsection "open_browser_cmd"
.Vb 1
\&    my $cmd = open_browser_cmd();
.Ve
.PP
Returns the best command found to open a \s-1URL\s0 on your system.
.PP
If no command was found, returns \f(CW\*(C`undef\*(C'\fR.
.SS "open_browser_cmd_all"
.IX Subsection "open_browser_cmd_all"
.Vb 1
\&    my $cmd = open_browser_cmd_all();
.Ve
.PP
Returns the first command found to open a \s-1URL\s0.
.PP
If no command was found, returns \f(CW\*(C`undef\*(C'\fR.
.SH "AUTHOR"
.IX Header "AUTHOR"
Pedro Melo, \f(CW\*(C`<melo at cpan.org>\*(C'\fR
.SH "COPYRIGHT & LICENSE"
.IX Header "COPYRIGHT & LICENSE"
Copyright 2009 Pedro Melo.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "SOAP::Transport::JABBER 3"
.TH SOAP::Transport::JABBER 3 "2011-04-14" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "SOAP::Transport::JABBER"
.IX Header "SOAP::Transport::JABBER"
This class provides a Jabber-based transport backend for SOAP::Lite.
.PP
This class uses the Net::Jabber classes to abstract the Jabber
protocol away from the direct notice of the application. Besides maintaining
any needed objects internally, the package also uses a separate class as a
proxy between communication layers, SOAP::Transport::JABBER::Query. The
Jabber support provides both client and server classes.
.SS "SOAP::Transport::JABBER::Client"
.IX Subsection "SOAP::Transport::JABBER::Client"
Inherits from: SOAP::Client, Net::Jabber::Client.
This class provides localized implementations for both the new and
send_receive methods, neither of which are changed in terms of interface.
The only difference is that the send_receive method doesn't directly use
the action hash key on the input it receives. In addition to these two basic
methods, the server class overrides the endpoint
method it would otherwise inherit from SOAP::Client:
.IP "endpoint" 4
.IX Item "endpoint"
In the general sense, this still acts as a basic accessor method, with the
same get value/set value behavior used consistently through the SOAP::Lite
module. The difference between this version and most others is that when the
endpoint is initially set or is changed, the client object makes the
connection to the Jabber endpoint, sending the proper authentication
credentials and setting up the conversation mechanism using the
SOAP::Transport::JABBER::Query class as a delegate. It then calls the
superclass endpoint method to ensure that all other related elements are
taken care of.
.SS "SOAP::Transport::JABBER::Server"
.IX Subsection "SOAP::Transport::JABBER::Server"
Inherits from: SOAP::Server.
.PP
The server class provided for Jabber support defines a slightly different
interface to the constructor. The server manages the Jabber communication
by means of an internal Net::Jabber::Client instance. In a fashion similar
to that used by SOAP::Transport::HTTP::Daemon, the server class catches
methods that are meant for the Jabber client and treats them as if the class
inherits directly from that class, without actually doing so. In doing so,
the handle method is implemented as a frontend to the Process method of the
Jabber client class. The difference in the interface to the constructor is:
.IP "new(\fI\s-1URI\s0\fR, \fIoptional server key/value options\fR)" 4
.IX Item "new(URI, optional server key/value options)"
.Vb 1
\&    $srv = SOAP::Transport::JABBER::Server\-> new($uri);
.Ve
.Sp
The constructor for the class expects that the first argument will be a
Jabber-style \s-1URI\s0, followed by the standard set of optional key/value pairs
of method names and their parameters. All the method/parameter
pairs are delegated to the superclass constructor; only the Jabber \s-1URI\s0 is
handled locally. It's used to set up the Net::Jabber::Client instance that
manages the actual communications.
.SH "BUGS"
.IX Header "BUGS"
This module is currently unmaintained, so if you find a bug, it's yours \-
you probably have to fix it yourself. You could also become maintainer \-
just send an email to mkutter@cpan.org
.SH "AUTHORS"
.IX Header "AUTHORS"
Paul Kulchenko (paulclinger@yahoo.com)
.PP
Randy J. Ray (rjray@blackperl.com)
.PP
Byrne Reese (byrne@majordojo.com)
.PP
Martin Kutter (martin.kutter@fen\-net.de)

.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Font::TypefaceJS 3"
.TH Font::TypefaceJS 3 "2011-01-28" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Font::TypefaceJS \- Generate fonts for use with typeface.js
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
use Font::TypefaceJS;
.PP
my \f(CW$typeface\fR = Font::TypefaceJS\->new( 
	input_filename => \*(L"truetype_font.ttf\*(R",
	unicode_range_names => ['Basic Latin', 'Latin\-1 Supplement'],
);
.PP
\&\f(CW$typeface\fR\->write_file( output_filename => 'font.typeface.js' );
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Font::TypefaceJS converts truetype fonts to a format that typeface.js can read.  typeface.js is
a javascript library that uses web browsers' vector drawing capability (<canvas> and \s-1VML\s0) to 
draw text in \s-1HTML\s0 documents. See http://typeface.neocracy.org.
.PP
Many font vendors specifically prohibit embedding fonts in documents, and this module attempts 
to honor those restrictions.
.SH "METHODS"
.IX Header "METHODS"
Methods take named parameters.
.IP "\fInew()\fR" 4
.IX Item "new()"
Takes an \f(CW\*(C`input_filename\*(C'\fR which should be a truetype font file, and optional arrayref of 
\&\f(CW\*(C`unicode_range_names\*(C'\fR to support.  If no range names are specified it is assumed we want all 
that are supported by the font.  See \fIUnicode::UCD\fR.  Specify a true value for \f(CW\*(C`verbose\*(C'\fR
to see more output.
.IP "\fIcheck_embed_license()\fR" 4
.IX Item "check_embed_license()"
Checks to see whether the vendor indicated that this font should be embedable as indicated by
the fsType value in the font's \s-1OS/2\s0 table.  Returns false if the \*(L"Restricted License embedding\*(R"
flag is in effect.  See http://www.microsoft.com/typography/tt/ttf_spec/ttch02.doc
.IP "\fIget_unicode_range_counts()\fR" 4
.IX Item "get_unicode_range_counts()"
Returns a hashref containing information about which characters and which unicode ranges are 
supported within this font.  See \fIUnicode::UCD\fR.
.IP "\fIget_json_data()\fR" 4
.IX Item "get_json_data()"
Returns the \s-1JSON\s0 data structure used by typeface.js.  This contains glyph outline information as 
selected font metadata.
.IP "\fIwrite_file()\fR" 4
.IX Item "write_file()"
Writes the font in typeface.js format, composed of javascript and \s-1JSON\s0.  Takes an optional 
\&\f(CW\*(C`output_filename\*(C'\fR parameter which defaults to reasonable name if not specified.  Returns the 
output filename on success, whether it was specified or derived.  Returns undef on failure.
.SH "AUTHOR"
.IX Header "AUTHOR"
David Chester | davidchester@gmx.net
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 2008\-2009, David Chester
.PP
This program is free software; you can redistribute
it and/or modify it under the same terms as Perl itself.
.PP
The full text of the license can be found in the
\&\s-1LICENSE\s0 file included with this module.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fIFont::FreeType\fR, \fIFont::TTF::Font\fR, \fIUnicode::UCD\fR
.SH "POD ERRORS"
.IX Header "POD ERRORS"
Hey! \fBThe above document had some coding errors, which are explained below:\fR
.IP "Around line 32:" 4
.IX Item "Around line 32:"
\&'=item' outside of any '=over'
.IP "Around line 61:" 4
.IX Item "Around line 61:"
You forgot a '=back' before '=head1'

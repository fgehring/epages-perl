.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Date::Manip::Lang 3"
.TH Date::Manip::Lang 3 "2011-06-03" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Date::Manip::Lang \- date manipulation routines (language initialization)
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module is a series of routines, one per language, used to
initialize the support for different languages in Date::Manip
.SH "ADDING A LANGUAGE"
.IX Header "ADDING A LANGUAGE"
Adding a language is easily done.  If you want to add a language,
refer to the files in module that live in: lib/Date/Manip/Lang .
.PP
First, send me the name of the language (in \s-1ASCII\s0 character) as well
as any locale designations.
.PP
For example, to create a Spanish translation (which is not necessary
since it already exists), I need the following list::
.PP
.Vb 1
\&   spanish es es_es
.Ve
.PP
The first word is the name of the language. Copy copy the english.pm
file to spanish.pm.
.PP
The language file you just created is a new module containing the data
for that language. It needs to be modified in the following ways:
.IP "\(bu" 4
Change \*(L"english\*(R" to \*(L"spanish\*(R" everywhere it appears in the new file.
Also change \*(L"English\*(R" to \*(L"Spanish\*(R".
.IP "\(bu" 4
Look for a line of the form:
.Sp
.Vb 1
\&   @Encodings = qw();
.Ve
.Sp
and change it to include the encodings most often used by this
language. For example,
.Sp
.Vb 1
\&   @Encodings = qw(utf\-8 iso\-8859\-1 perl);
.Ve
.Sp
Always include 'utf\-8' and 'perl' as the first and last elements in the list.
.IP "\(bu" 4
Change all of the data (after the _\|_DATA_\|_ line) as described below.
.PP
The data section of the module (which is written in \s-1YAML\s0) is fairly
straightforward to translate.
.PP
Where possible, please store all data in \s-1UTF\-8\s0 characters. If you have
to escape high-byte characters, or use some other character encoding,
please let me know. I'll do my best to deal with it, but it will delay
me incorporating the translation into the module.
.PP
Most of the sections below can contain any number of alternate words
which imply the same thing. Any time a list contains multiple words,
the first should be the 'preferred' or most common word.
.PP
If a word contains \s-1UTF\-8\s0 characters which have a simple \s-1ASCII\s0
equivalent, you should include both forms. For example, the spanish
name for Saturday in \s-1ASCII\s0 would be written sabado, but in reality,
the first 'a' has an accent over it. This word should appear
twice... first in full \s-1UTF\-8\s0 encoding, and second as all \s-1ASCII\s0. If the
language (Russian for example) has no \s-1ASCII\s0 equivalent, just include
the \s-1UTF\-8\s0 representation.
.IP "ampm" 4
.IX Item "ampm"
The ampm section consists of two lists of words. The first section are
words which can be included after a time to designate a morning time
(i.e. \s-1AM\s0). The second set are words which designate an afternoon time
(i.e. \s-1PM\s0).
.IP "at" 4
.IX Item "at"
The word 'at' as it appears in the phrase:
.Sp
.Vb 1
\&   AT 3:00
.Ve
.IP "day_abb, day_char, day_name" 4
.IX Item "day_abb, day_char, day_name"
These are each a list of seven elements which refer to the days Monday
through Sunday.
.Sp
day_char is typically a one or two character designation of the day
(M, T, W, ...).
.Sp
day_abb is an abbreviation for the day (Mon, Tue, Wed, ...).
.Sp
day_name is the full day name (Monday, Tuesday, ...).
.IP "each" 4
.IX Item "each"
This is a list of words that could be used to translate the following
phrases:
.Sp
.Vb 1
\&   EACH Monday
\&
\&   EVERY Monday
\&
\&   EVERY month
.Ve
.IP "fields" 4
.IX Item "fields"
These are the names of the fields in a delta. There are 7 fields:
years, months, weeks, days, hours, minutes, seconds.
.Sp
The first field would be the ways that you might name the years field:
.Sp
.Vb 1
\&   YEARS YEAR YRS YR
.Ve
.IP "last" 4
.IX Item "last"
This is a list of words that could be used to translate the following
phrase:
.Sp
.Vb 1
\&   LAST day of the month
.Ve
.IP "mode" 4
.IX Item "mode"
This contains two lists of words which can be used to specify whether
a delta is exact, approximate, or business.
.Sp
The first list contains words which would specify exact or approximate
deltas.  In other words, a delta could be specified:
.Sp
.Vb 1
\&   in EXACTLY 3 hours
\&
\&   in APPROXIMATELY 3 hours
.Ve
.Sp
The second list contains words which would specify business deltas. In
other words:
.Sp
.Vb 1
\&   in 3 BUSINESS days
.Ve
.IP "month_abb, month_name" 4
.IX Item "month_abb, month_name"
These specify the abbreviation and name respectively of the 12 months.
.IP "nextprev" 4
.IX Item "nextprev"
This contains two sets of words. The first specifies the next element,
and would be used to translate the following phrases:
.Sp
.Vb 1
\&   NEXT week
\&
\&   NEXT Tuesday
.Ve
.Sp
The second set specifies the previous element, and would be used to
translate the following phrases:
.Sp
.Vb 1
\&   LAST Tuesday
\&
\&   PREVIOUS week
.Ve
.IP "nth" 4
.IX Item "nth"
This contains the numbers from 1\-53. The first element should be the
equivalent of '1st', '2nd', Additional elements should be the equivalent
of the number spelled out (one, two, ...) and the ordinal number
spelled out (first, second, ...).
.IP "of" 4
.IX Item "of"
This is a word which might be used to translate the following phrases:
.Sp
.Vb 1
\&   1st dat OF December
\&
\&   1st day IN December
.Ve
.IP "offset_date" 4
.IX Item "offset_date"
This actually contains a hash, rather than a list.
.Sp
Most languages have special words which refer to a day relative to today.
The most common (in English) are:
.Sp
.Vb 3
\&   TODAY
\&   TOMORROW
\&   YESTERDAY
.Ve
.Sp
The keys of the hash are the words, and the values of the hash are a
delta which can be used to get the date relative to today.
.Sp
For example, tomorrow is the delta '+0:0:0:1:0:0:0'.
.Sp
If the word contains \s-1UTF\-8\s0 characters, please include it twice, once with
the \s-1UTF\-8\s0 characters, and once as \s-1ASCII\s0 (if relevant).
.IP "offset_time" 4
.IX Item "offset_time"
This is a hash similar to offset_date.
.Sp
Most languages have words which might refer to times relative to the
current time. In English, the only common word is
.Sp
.Vb 1
\&   NOW
.Ve
.Sp
but in other languages, there may be other common words.
.IP "on" 4
.IX Item "on"
This is a word which might be used to translate the following phrases:
.Sp
.Vb 1
\&   ON July 5th
.Ve
.IP "times" 4
.IX Item "times"
This is a hash similar to offset_date.
.Sp
Most languages have special words which refer to specific times of the
day. In English, these include:
.Sp
.Vb 2
\&   NOON
\&   MIDNIGHT
.Ve
.IP "when" 4
.IX Item "when"
This is two lists of words. The first list would be in a delta referring to
a time in the past. For example:
.Sp
.Vb 1
\&   5 hours AGO
\&
\&   5 hours EARLIER
.Ve
.Sp
The second list of words would be in a delta referring to a time in the
future. For example:
.Sp
.Vb 1
\&   IN 5 hours
\&
\&   5 hours LATER
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Date::Manip        \- main module documentation
.SH "LICENSE"
.IX Header "LICENSE"
This script is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "AUTHOR"
.IX Header "AUTHOR"
Sullivan Beck (sbeck@cpan.org)

.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "XML::Compile::SOAP11::Client 3"
.TH XML::Compile::SOAP11::Client 3 "2011-06-20" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
XML::Compile::SOAP11::Client \- SOAP1.1 client needs
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 3
\& XML::Compile::SOAP11::Client
\&   is a XML::Compile::SOAP11
\&   is a XML::Compile::SOAP
\&
\& XML::Compile::SOAP11::Client
\&   is a XML::Compile::SOAP::Client
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
See XML::Compile::SOAP11.
.SH "METHODS"
.IX Header "METHODS"
.SS "Constructors"
.IX Subsection "Constructors"
.ie n .IP "$obj\->\fBnew\fR(\s-1OPTIONS\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBnew\fR(\s-1OPTIONS\s0)" 4
.IX Item "$obj->new(OPTIONS)"
See \*(L"Constructors\*(R" in XML::Compile::SOAP11
.SS "Accessors"
.IX Subsection "Accessors"
.ie n .IP "$obj\->\fBname\fR" 4
.el .IP "\f(CW$obj\fR\->\fBname\fR" 4
.IX Item "$obj->name"
See \*(L"Accessors\*(R" in XML::Compile::SOAP
.ie n .IP "$obj\->\fBschemas\fR" 4
.el .IP "\f(CW$obj\fR\->\fBschemas\fR" 4
.IX Item "$obj->schemas"
See \*(L"Accessors\*(R" in XML::Compile::SOAP
.ie n .IP "$obj\->\fBversion\fR" 4
.el .IP "\f(CW$obj\fR\->\fBversion\fR" 4
.IX Item "$obj->version"
See \*(L"Accessors\*(R" in XML::Compile::SOAP
.SS "Single message"
.IX Subsection "Single message"
.ie n .IP "$obj\->\fBcompileMessage\fR(('\s-1SENDER\s0'|'\s-1RECEIVER\s0'), \s-1OPTIONS\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBcompileMessage\fR(('\s-1SENDER\s0'|'\s-1RECEIVER\s0'), \s-1OPTIONS\s0)" 4
.IX Item "$obj->compileMessage(('SENDER'|'RECEIVER'), OPTIONS)"
See \*(L"Single message\*(R" in XML::Compile::SOAP11
.ie n .IP "$obj\->\fBmessageStructure\fR(\s-1XML\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBmessageStructure\fR(\s-1XML\s0)" 4
.IX Item "$obj->messageStructure(XML)"
.PD 0
.IP "XML::Compile::SOAP11::Client\->\fBmessageStructure\fR(\s-1XML\s0)" 4
.IX Item "XML::Compile::SOAP11::Client->messageStructure(XML)"
.PD
See \*(L"Single message\*(R" in XML::Compile::SOAP
.SS "Helpers"
.IX Subsection "Helpers"
.SS "Transcoding"
.IX Subsection "Transcoding"
.ie n .IP "$obj\->\fBreplyMustUnderstandFault\fR(\s-1TYPE\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBreplyMustUnderstandFault\fR(\s-1TYPE\s0)" 4
.IX Item "$obj->replyMustUnderstandFault(TYPE)"
See \*(L"Transcoding\*(R" in XML::Compile::SOAP
.ie n .IP "$obj\->\fBroleAbbreviation\fR(\s-1URI\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBroleAbbreviation\fR(\s-1URI\s0)" 4
.IX Item "$obj->roleAbbreviation(URI)"
See \*(L"Transcoding\*(R" in XML::Compile::SOAP
.ie n .IP "$obj\->\fBroleURI\fR(URI|STRING)" 4
.el .IP "\f(CW$obj\fR\->\fBroleURI\fR(URI|STRING)" 4
.IX Item "$obj->roleURI(URI|STRING)"
See \*(L"Transcoding\*(R" in XML::Compile::SOAP
.SS "Handlers"
.IX Subsection "Handlers"
.ie n .IP "$obj\->\fBcompileClient\fR(\s-1OPTIONS\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBcompileClient\fR(\s-1OPTIONS\s0)" 4
.IX Item "$obj->compileClient(OPTIONS)"
See \*(L"Handlers\*(R" in XML::Compile::SOAP::Client
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of XML-Compile-SOAP distribution version 2.24,
built on June 20, 2011. Website: \fIhttp://perl.overmeer.net/xml\-compile/\fR
.PP
Other distributions in this suite:
XML::Compile,
XML::Compile::SOAP,
XML::Compile::SOAP12,
XML::Compile::SOAP::Daemon,
XML::Compile::SOAP::WSA,
XML::Compile::C14N,
XML::Compile::WSS,
XML::Compile::Tester,
XML::Compile::Cache,
XML::Compile::Dumper,
XML::Compile::RPC,
XML::Rewrite,
XML::eXistDB,
and
XML::LibXML::Simple.
.PP
Please post questions or ideas to the mailinglist at
\&\fIhttp://lists.scsys.co.uk/cgi\-bin/mailman/listinfo/xml\-compile\fR
For live contact with other developers, visit the \f(CW\*(C`#xml\-compile\*(C'\fR channel
on \f(CW\*(C`irc.perl.org\*(C'\fR.
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2007\-2011 by Mark Overmeer. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://www.perl.com/perl/misc/Artistic.html\fR

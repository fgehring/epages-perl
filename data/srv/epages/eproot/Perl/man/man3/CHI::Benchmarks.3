.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "CHI::Benchmarks 3"
.TH CHI::Benchmarks 3 "2011-04-28" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
CHI::Benchmarks \- Benchmarks of CHI and non\-CHI drivers
.SH "VERSION"
.IX Header "VERSION"
version 0.47
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
These benchmarks were created by running
.PP
.Vb 1
\&   etc/bench/bench.pl \-d . \-t 10 \-x
.Ve
.PP
for \s-1CHI\s0 0.42, on \s-1OS\s0 X v10.6.6, 2.2 GHz Intel Core 2 Duo, Perl 5.12.2.
.PP
For each cache, bench.pl does repeated gets and sets of a data structure for at
least 10 seconds and measures the wallclock time per operation.
.PP
These numbers should just be used as a rough guideline! Actual results will
vary widely depending on system, get/set pattern, actual values being set, the
proper tuning of memcached/mysql, etc. For best results run the benchmark
script (available in this distribution) on your own system.
.PP
.Vb 10
\&   Cache                Get time Set time Description                         
\&   cache_ref            0.009ms  0.008ms  Cache::Ref (CART)                   
\&   chi_memory_raw       0.019ms  0.036ms  CHI::Driver::MemoryRaw              
\&   cache_fastmmap       0.022ms  0.040ms  Cache::FastMmap                     
\&   chi_memory           0.042ms  0.066ms  CHI::Driver::Memory                 
\&   chi_berkeleydb       0.052ms  0.073ms  CHI::Driver::BerkeleyDB             
\&   chi_fastmmap         0.057ms  0.087ms  CHI::Driver::FastMmap               
\&   cache_cache_memory   0.065ms  0.070ms  Cache::MemoryCache                  
\&   cache_memcached_fast 0.097ms  0.131ms  Cache::Memcached::Fast              
\&   chi_dbi_sqlite       0.112ms  1.659ms  CHI::Driver::DBI (sqlite)           
\&   cache_memcached_lib  0.118ms  0.156ms  Cache::Memcached::libmemcached      
\&   chi_file             0.118ms  1.138ms  CHI::Driver::File                   
\&   chi_memcached_fast   0.138ms  0.178ms  CHI::Driver::Memcached::Fast        
\&   chi_memcached_lib    0.151ms  0.202ms  CHI::Driver::Memcached::libmemcached
\&   chi_dbi_mysql        0.236ms  0.273ms  CHI::Driver::DBI (mysql)            
\&   cache_memcached_std  0.238ms  0.180ms  Cache::Memcached                    
\&   chi_memcached_std    0.279ms  0.235ms  CHI::Driver::Memcached              
\&   cache_cache_file     0.481ms  1.391ms  Cache::FileCache
.Ve
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\s-1CHI\s0
.SH "AUTHOR"
.IX Header "AUTHOR"
Jonathan Swartz <swartz@pobox.com>
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2011 by Jonathan Swartz.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.

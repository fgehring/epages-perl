.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Net::XMPP::Stanza 3"
.TH Net::XMPP::Stanza 3 "2011-04-14" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Net::XMPP::Stanza \- XMPP Stanza Module
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  Net::XMPP::Stanza is a private package that serves as a basis for all
\&  XMPP stanzas generated by Net::XMPP.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
.Vb 3
\&  This module is not meant to be used directly.  You should be using
\&  either Net::XMPP::IQ, Net::XMPP::Message, Net::XMPP::Presence, or
\&  another package that inherits from Net::XMPP::Stanza.
\&
\&  That said, this is where all of the namespaced methods are documented.
\&
\&  The current supported namespaces are:
.Ve
.PP
.Vb 6
\&    jabber:iq:auth
\&    jabber:iq:privacy
\&    jabber:iq:register
\&    jabber:iq:roster
\&    urn:ietf:params:xml:ns:xmpp\-bind
\&    urn:ietf:params:xml:ns:xmpp\-session
.Ve
.PP
.Vb 2
\&  For more information on what these namespaces are for, visit
\&  http://www.jabber.org and browse the Jabber Programmers Guide.
\&
\&  The following tables can be read as follows:
\&
\&  ny:private:ns
\&
\&  Name                        Type     Get  Set  Remove  Defined  Add
\&  ==========================  =======  ===  ===  ======  =======  ===
\&  Foo                         scalar    X    X     X        X
\&  Bar                         child                                X
\&  Bars                        child     X
\&  Test                        master    X    X
\&
\&  Withing the my:private:ns namespace, there exists the functions:
\&
\&    GetFoo(), SetFoo(), RemoveFoo(), DefinedFoo()
\&
\&    AddBar()
\&
\&    GetBars(), DefinedBars()
\&
\&    GetTest(), SetMaster()
\&
\&  Hopefully it should be obvious how this all works.  If not feel free to
\&  contact me and I\*(Aqll work on adding more documentation.
.Ve
.SH "jabber:iq:auth"
.IX Header "jabber:iq:auth"
.Vb 10
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  Digest                      scalar      X    X     X        X
\&  Hash                        scalar      X    X     X        X
\&  Password                    scalar      X    X     X        X
\&  Resource                    scalar      X    X     X        X
\&  Sequence                    scalar      X    X     X        X
\&  Token                       scalar      X    X     X        X
\&  Username                    scalar      X    X     X        X
\&  Auth                        master      X    X
.Ve
.SH "jabber:iq:privacy"
.IX Header "jabber:iq:privacy"
.Vb 7
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  Active                      scalar      X    X     X        X
\&  Default                     scalar      X    X     X        X
\&  List                        child                                  X
\&  Lists                       child       X          X        X
\&  Privacy                     master      X    X
.Ve
.SH "jabber:iq:privacy \- item objects"
.IX Header "jabber:iq:privacy - item objects"
.Vb 11
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  Action                      scalar      X    X     X        X
\&  IQ                          flag        X    X     X        X
\&  Message                     flag        X    X     X        X
\&  Order                       scalar      X    X     X        X
\&  PresenceIn                  flag        X    X     X        X
\&  PresenceOut                 flag        X    X     X        X
\&  Type                        scalar      X    X     X        X
\&  Value                       scalar      X    X     X        X
\&  Item                        master      X    X
.Ve
.SH "jabber:iq:privacy \- list objects"
.IX Header "jabber:iq:privacy - list objects"
.Vb 6
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  Name                        scalar      X    X     X        X
\&  Item                        child                                  X
\&  Items                       child       X          X        X
\&  List                        master      X    X
.Ve
.SH "jabber:iq:register"
.IX Header "jabber:iq:register"
.Vb 10
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  Address                     scalar      X    X     X        X
\&  City                        scalar      X    X     X        X
\&  Date                        scalar      X    X     X        X
\&  Email                       scalar      X    X     X        X
\&  First                       scalar      X    X     X        X
\&  Instructions                scalar      X    X     X        X
\&  Key                         scalar      X    X     X        X
\&  Last                        scalar      X    X     X        X
\&  Misc                        scalar      X    X     X        X
\&  Name                        scalar      X    X     X        X
\&  Nick                        scalar      X    X     X        X
\&  Password                    scalar      X    X     X        X
\&  Phone                       scalar      X    X     X        X
\&  Registered                  flag        X    X     X        X
\&  Remove                      flag        X    X     X        X
\&  State                       scalar      X    X     X        X
\&  Text                        scalar      X    X     X        X
\&  URL                         scalar      X    X     X        X
\&  Username                    scalar      X    X     X        X
\&  Zip                         scalar      X    X     X        X
\&  Register                    master      X    X
.Ve
.SH "jabber:iq:roster"
.IX Header "jabber:iq:roster"
.Vb 5
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  Item                        child                                  X
\&  Items                       child       X
\&  Roster                      master      X    X
.Ve
.SH "jabber:iq:roster \- item objects"
.IX Header "jabber:iq:roster - item objects"
.Vb 8
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  Ask                         scalar      X    X     X        X
\&  Group                       array       X    X     X        X
\&  JID                         jid         X    X     X        X
\&  Name                        scalar      X    X     X        X
\&  Subscription                scalar      X    X     X        X
\&  Item                        master      X    X
.Ve
.SH "urn:ietf:params:xml:ns:xmpp\-bind"
.IX Header "urn:ietf:params:xml:ns:xmpp-bind"
.Vb 5
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  JID                         jid         X    X     X        X
\&  Resource                    scalar      X    X     X        X
\&  Bind                        master      X    X
.Ve
.SH "urn:ietf:params:xml:ns:xmpp\-session"
.IX Header "urn:ietf:params:xml:ns:xmpp-session"
.Vb 3
\&  Name                        Type       Get  Set  Remove  Defined  Add
\&  ==========================  =========  ===  ===  ======  =======  ===
\&  Session                     master      X    X
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Ryan Eatmon
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
This module is free software, you can redistribute it and/or modify it
under the \s-1LGPL\s0.

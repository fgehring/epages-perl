.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Log::Report::Translator::Gettext 3"
.TH Log::Report::Translator::Gettext 3 "2011-08-23" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Log::Report::Translator::Gettext \- the GNU gettext infrastructure
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 2
\& Log::Report::Translator::Gettext
\&   is a Log::Report::Translator
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\& # normal use (end\-users view)
\&
\& use Log::Report \*(Aqmy\-domain\*(Aq
\&   , translator => Log::Report::Translator::Gettext\->new;
\&
\& print _\|_"Hello World\en";  # language determined by environment
\&
\& # internal use
\&
\& my $msg = Log::Report::Message\->new
\&   ( _msgid      => "Hello World\en"
\&   , _textdomain => \*(Aqmy\-domain\*(Aq
\&   );
\&
\& print Log::Report::Translator::Gettext\->new
\&     \->translate(\*(Aqnl\-BE\*(Aq, $msg);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
\&\s-1UNTESTED\s0!!!  \s-1PLEASE\s0 \s-1CONTRIBUTE\s0!!!
Translate a message using the \s-1GNU\s0 gettext infrastructure.
.PP
Guido Flohr reports:
be aware that Locale::gettext is only a binding for the C library
libintl and depends on its features.  That means that your module will
effectively only run on \s-1GNU\s0 systems and maybe on Solaris (depending
on the exact version), because only these systems provide the plural
handling functions \fIngettext()\fR, \fIdngettext()\fR and \fIdcngettext()\fR.  Sooner or
later you will probably also need \fIbind_textdomain_codeset()\fR which is
also only available on certain systems.
.SH "METHODS"
.IX Header "METHODS"
.SS "Constructors"
.IX Subsection "Constructors"
.IP "Log::Report::Translator::Gettext\->\fBnew\fR(\s-1OPTIONS\s0)" 4
.IX Item "Log::Report::Translator::Gettext->new(OPTIONS)"
See \*(L"Constructors\*(R" in Log::Report::Translator
.SS "Accessors"
.IX Subsection "Accessors"
.ie n .IP "$obj\->\fBcharset\fR" 4
.el .IP "\f(CW$obj\fR\->\fBcharset\fR" 4
.IX Item "$obj->charset"
See \*(L"Accessors\*(R" in Log::Report::Translator
.ie n .IP "$obj\->\fBlexicons\fR" 4
.el .IP "\f(CW$obj\fR\->\fBlexicons\fR" 4
.IX Item "$obj->lexicons"
See \*(L"Accessors\*(R" in Log::Report::Translator
.SS "Translating"
.IX Subsection "Translating"
.ie n .IP "$obj\->\fBload\fR(\s-1DOMAIN\s0, \s-1LOCALE\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBload\fR(\s-1DOMAIN\s0, \s-1LOCALE\s0)" 4
.IX Item "$obj->load(DOMAIN, LOCALE)"
See \*(L"Translating\*(R" in Log::Report::Translator
.ie n .IP "$obj\->\fBtranslate\fR(\s-1MESSAGE\s0)" 4
.el .IP "\f(CW$obj\fR\->\fBtranslate\fR(\s-1MESSAGE\s0)" 4
.IX Item "$obj->translate(MESSAGE)"
See \*(L"Translating\*(R" in Log::Report::Translator
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Log-Report distribution version 0.94,
built on August 23, 2011. Website: \fIhttp://perl.overmeer.net/log\-report/\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2007\-2011 by Mark Overmeer. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://www.perl.com/perl/misc/Artistic.html\fR

.\" Automatically generated by Pod::Man 2.23 (Pod::Simple 3.14)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Log::Report::Minimal 3"
.TH Log::Report::Minimal 3 "2016-01-18" "perl v5.12.3" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Log::Report::Minimal \- simulate Log::Report functions simple
.SH "INHERITANCE"
.IX Header "INHERITANCE"
.Vb 2
\& Log::Report::Minimal
\&   is a Exporter
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\& # See Log::Report, most functions get "hollow" behavior
\& use Log::Report::Optional mode => \*(AqDEBUG\*(Aq;
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module implements the functions provided by Log::Report, but then
as simple as possible: no support for translations, no dispatchers, no
smart exceptions.  The package uses \f(CW\*(C`Log::Report\*(C'\fR in an \f(CW\*(C`::Optional\*(C'\fR
way, the main script determines whether it wants the \f(CW\*(C`::Minimal\*(C'\fR or
full-blown feature set.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .IP "\fBtextdomain\fR( $domain, [$configuration] )" 4
.el .IP "\fBtextdomain\fR( \f(CW$domain\fR, [$configuration] )" 4
.IX Item "textdomain( $domain, [$configuration] )"
.SS "Report Production and Configuration"
.IX Subsection "Report Production and Configuration"
.PD 0
.ie n .IP "\fBdispatcher\fR( <$type, $name, %options>|<$command, @names> )" 4
.el .IP "\fBdispatcher\fR( <$type, \f(CW$name\fR, \f(CW%options\fR>|<$command, \f(CW@names\fR> )" 4
.IX Item "dispatcher( <$type, $name, %options>|<$command, @names> )"
.PD
Not supported.
.ie n .IP "\fBreport\fR( [$options], $reason, $message|<\s-1STRING\s0,$params> )" 4
.el .IP "\fBreport\fR( [$options], \f(CW$reason\fR, \f(CW$message\fR|<\s-1STRING\s0,$params> )" 4
.IX Item "report( [$options], $reason, $message|<STRING,$params> )"
Be warned that \f(CW%options\fR is a \s-1HASH\s0 here.
.Sp
.Vb 3
\& \-Option  \-\-Default
\&  errno     $! or 1
\&  is_fatal  <depends on reason>
.Ve
.RS 4
.IP "errno => \s-1INTEGER\s0" 2
.IX Item "errno => INTEGER"
.PD 0
.IP "is_fatal => \s-1BOOLEAN\s0" 2
.IX Item "is_fatal => BOOLEAN"
.RE
.RS 4
.RE
.ie n .IP "\fBtry\fR(\s-1CODE\s0, %options)" 4
.el .IP "\fBtry\fR(\s-1CODE\s0, \f(CW%options\fR)" 4
.IX Item "try(CODE, %options)"
.PD
.SS "Abbreviations for \fIreport()\fP"
.IX Subsection "Abbreviations for report()"
.IP "\fBalert\fR($message)" 4
.IX Item "alert($message)"
.PD 0
.IP "\fBassert\fR($message)" 4
.IX Item "assert($message)"
.IP "\fBerror\fR($message)" 4
.IX Item "error($message)"
.IP "\fBfailure\fR($message)" 4
.IX Item "failure($message)"
.IP "\fBfault\fR($message)" 4
.IX Item "fault($message)"
.IP "\fBinfo\fR($message)" 4
.IX Item "info($message)"
.IP "\fBmistake\fR($message)" 4
.IX Item "mistake($message)"
.IP "\fBnotice\fR($message)" 4
.IX Item "notice($message)"
.IP "\fBpanic\fR($message)" 4
.IX Item "panic($message)"
.IP "\fBtrace\fR($message)" 4
.IX Item "trace($message)"
.IP "\fBwarning\fR($message)" 4
.IX Item "warning($message)"
.PD
.SS "Language Translations"
.IX Subsection "Language Translations"
No translations, no Log::Report::Message objects returned.
.IP "\fBN_\|_\fR($msgid)" 4
.IX Item "N__($msgid)"
.PD 0
.ie n .IP "\fBN_\|_n\fR($single_msgid, $plural_msgid)" 4
.el .IP "\fBN_\|_n\fR($single_msgid, \f(CW$plural_msgid\fR)" 4
.IX Item "N__n($single_msgid, $plural_msgid)"
.IP "\fBN_\|_w\fR(\s-1STRING\s0)" 4
.IX Item "N__w(STRING)"
.IP "\fB_\|_\fR($msgid)" 4
.IX Item "__($msgid)"
.ie n .IP "\fB_\|_n\fR($msgid, $plural_msgid, $count, \s-1PAIRS\s0)" 4
.el .IP "\fB_\|_n\fR($msgid, \f(CW$plural_msgid\fR, \f(CW$count\fR, \s-1PAIRS\s0)" 4
.IX Item "__n($msgid, $plural_msgid, $count, PAIRS)"
.ie n .IP "\fB_\|_nx\fR($msgid, $plural_msgid, $count, \s-1PAIRS\s0)" 4
.el .IP "\fB_\|_nx\fR($msgid, \f(CW$plural_msgid\fR, \f(CW$count\fR, \s-1PAIRS\s0)" 4
.IX Item "__nx($msgid, $plural_msgid, $count, PAIRS)"
.IP "\fB_\|_x\fR($msgid, \s-1PAIRS\s0)" 4
.IX Item "__x($msgid, PAIRS)"
.ie n .IP "\fB_\|_xn\fR($single_msgid, $plural_msgid, $count, \s-1PAIRS\s0)" 4
.el .IP "\fB_\|_xn\fR($single_msgid, \f(CW$plural_msgid\fR, \f(CW$count\fR, \s-1PAIRS\s0)" 4
.IX Item "__xn($single_msgid, $plural_msgid, $count, PAIRS)"
.PD
.SS "Configuration"
.IX Subsection "Configuration"
.ie n .IP "$obj\->\fBimport\fR( [$domain], %options )" 4
.el .IP "\f(CW$obj\fR\->\fBimport\fR( [$domain], \f(CW%options\fR )" 4
.IX Item "$obj->import( [$domain], %options )"
See Log::Report subroutine import.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
This module is part of Log-Report-Optional distribution version 1.02,
built on January 18, 2016. Website: \fIhttp://perl.overmeer.net/log\-report/\fR
.SH "LICENSE"
.IX Header "LICENSE"
Copyrights 2013\-2016 by [Mark Overmeer]. For other contributors see ChangeLog.
.PP
This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.
See \fIhttp://www.perl.com/perl/misc/Artistic.html\fR
